#!/usr/bin/env zsh
#
runc() {
  export FZF_DEFAULT_OPTS='--height 90% --reverse --border'
  local image=$(docker images --format '{{.Repository}}:{{.Tag}}' | fzf-tmux --reverse --multi)
  if [[ $image != '' ]]; then
    echo -e "\n  \033[1mDocker image:\033[0m" $image
    read -e -p $'  \e[1mOptions: \e[0m' -i "-it --rm" options

    printf "  \033[1mChoose the command: \033[0m"
    local cmd=$(echo -e "/bin/bash\nsh" | fzf-tmux --reverse --multi)
    if [[ $cmd == '' ]]; then
        read -e -p $'  \e[1mCustom command: \e[0m' cmd
    fi
    echo -e "  \033[1mCommand: \033[0m" $cmd

    export FZF_DEFAULT_COMMAND='find ./ -type d -maxdepth 1 -exec basename {} \;'
    printf "  \033[1mChoose the volume: \033[0m"
    local volume=$(fzf-tmux --reverse --multi)
    local curDir=${PWD##*/}
    if [[ $volume == '.' ]]; then
        echo -e "  \033[1mVolume: \033[0m" $volume
        volume="`pwd`:/$curDir -w /$curDir"
    else
        echo -e "  \033[1mVolume: \033[0m" $volume
        volume="`pwd`/$volume:/$volume -w /$volume"
    fi

    export FZF_DEFAULT_COMMAND=""
    export FZF_DEFAULT_OPTS=""

    history -s runc
    history -s docker run $options -v $volume $image $cmd
    echo ''
    docker run $options -v $volume $image $cmd
  fi
}

dlog() {
  export FZF_DEFAULT_OPTS='--height 90% --reverse --border'
  local preview_cmd='docker logs --tail 300 {}|bat'
  local container=$(docker ps -a --format '{{.Names}}'|fzf --reverse --no-multi --border --preview=$preview_cmd)
  if [[ $container != '' ]]; then
    docker logs --tail 100 -f $container
  fi
}

kpod() {
  #kubectl get pods -n flying --no-headers=true |head -n 1|awk '{printf $1;}'|xargs kubectl describe pods -n flying $1
  export FZF_DEFAULT_OPTS='--height 90% --reverse --border --bind up:preview-up,down:preview-down --color dark'
  local namespace=$1
  #local preview_cmd="echo {}|awk \"{printf $1;}\"| xargs kubectl describe pods -n $namespace $1 | bat -l yaml --color \"always\""
  local podline=$(kubectl get pods -n $namespace --no-headers=true|\
    fzf --reverse\
        --no-multi\
        --border\
  #      --preview $preview_cmd\
  )
  if [[ $podline != '' ]]; then
    echo $podline|awk '{printf $1;}'| xargs kubectl describe pods -n $namespace | bat -l yaml --color "always"
  fi
}

ksvs() {
  export FZF_DEFAULT_OPTS='--height 90% --reverse --border --bind up:preview-up,down:preview-down --color dark'
  local namespace=$1
  local preview_cmd="kubectl logs --tail 30 $@ {} | bat -l yaml --color \"always\""
  local podname=$(kubectl get services -n $namespace -o name|\
    fzf --reverse\
        --no-multi\
        --border\
        --preview $preview_cmd\
    )
  if [[ $podname != '' ]]; then
    kubectl describe services $podname -n $namespace|bat -l yaml --color "always"
  fi
}

kdpod() {
  #kubectl get pods -n flying --no-headers=true |head -n 1|awk '{printf $1;}'|xargs kubectl describe pods -n flying $1
  export FZF_DEFAULT_OPTS='--height 90% --reverse --border --bind up:preview-up,down:preview-down --color dark'
  local namespace=$1
  #local preview_cmd="echo {}|awk \"{printf $1;}\"| xargs kubectl describe pods -n $namespace $1 | bat -l yaml --color \"always\""
  local podline=$(kubectl get pods -n $namespace --no-headers=true|\
    fzf --reverse\
        --no-multi\
        --border
  )
  set -x
  if [[ $podline != '' ]]; then
    echo $podline|awk '{printf $1;}'| xargs kubectl delete pod -n $namespace
  fi
}

klog() {
  export FZF_DEFAULT_OPTS='--height 90% --reverse --border --bind up:preview-up,down:preview-down --color dark'
  local preview_cmd="kubectl logs --tail 30 $@ {} | bat -l yaml --color \"always\""
  local podname=$(kubectl get pods $@ -o name|\
    fzf --reverse\
        --no-multi\
        --border\
        --preview $preview_cmd\
    )
  if [[ $podname != '' ]]; then
    echo "kubectl logs $@ -f -p $podname"
    kubectl logs $@ -f $podname
  fi
}



ct() {
  export FZF_DEFAULT_OPTS='--height 90% --reverse --bind up:preview-up,down:preview-down --color dark'
  local preview_cmd="cheat {} | bat -l md -n --color \"always\""
  local name=$(cheat -l|awk '{print $1;}'|\
    fzf --reverse\
        --no-multi\
        --border\
        --preview $preview_cmd\
    )

  if [[ $name != '' ]]; then
    cheat $name |bat -l md --color "always" -n
  fi
}
